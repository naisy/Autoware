########################################
# Docker build
########################################
# time docker build -t autoware:1.9.1 -f Dockerfile.1.9.1 .


########################################
# Docker run xterm 
########################################
# [Xauthority setting]
# - [PC user]
# touch $HOME/.docker.xauth
# xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $HOME/.docker.xauth nmerge -
# - [PC root]
# touch /root/.docker.xauth
# xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f /root/.docker.xauth nmerge -
#
# docker run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix:rw -v /home/$(getent passwd 1000 | cut -d: -f1)/.docker.xauth:/home/ubuntu/.docker.xauth:rw -v /root/.docker.xauth:/root/.docker.xauth:rw -e "DISPLAY" --user ubuntu autoware


########################################
# Underlying OS repogitory
########################################
FROM nvidia/cudagl:9.1-devel-ubuntu16.04


########################################
# Maintainer Info
########################################
MAINTAINER Yoshiroh Takanashi <takanashi@gclue.jp>


########################################
# update package list
########################################
# Because somethime the repository is 404, use with --fix-missing option.
RUN apt-get --fix-missing update && apt-get install -y apt-utils

RUN echo /usr/local/cuda/lib64 >> /etc/ld.so.conf.d/nvidia.conf \
&& echo /usr/local/cuda/targets/x86_64-linux/lib/stubs >> /etc/ld.so.conf.d/nvidia.conf \
&& ldconfig


########################################
# Xauthority
########################################
# getent passwd 1000
# getent group 1000
# docker login user uid/gid must be the same as PC login user uid/gid(uid:1000, gid:1000). Add docker login user with uid:1000, gid:1000 for read/write xauthority.
RUN apt-get update && apt-get install -y sudo xauth dbus-x11 xterm
#Add new sudo user
ENV USERNAME ubuntu
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        # Replace 1000 with your user/group id
        usermod  --uid 1000 $USERNAME && \
        groupmod --gid 1000 $USERNAME


########################################
# bash setting
########################################
# sed
# escape characters \'$.*/[]^
# 1. Write the regex between single quotes.
# 2. \ -> \\
# 3. ' -> '\''
# 4. Put a backslash before $.*/[]^ and only those characters.

# user
# before
# #force_color_prompt=yes
# after
# force_color_prompt=yes

# before
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# after
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\[\033[01;31m\]autoware\[\033[00m\]:\[\033[01;35m\]\w\[\033[00m\]\$ '

# before
# alias ls='ls --color=auto'
# after
# alias ls='ls -asiF --color=auto'

RUN sed -i 's/#force_color_prompt=yes/force_color_prompt=yes/g' /home/$USERNAME/.bashrc \
&& sed -i 's/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;32m\\\]\\u@\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;34m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;32m\\\]\\u@\\\[\\033\[01;31m\\\]autoware\\\[\\033\[00m\\\]:\\\[\\033\[01;35m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/g' /home/$USERNAME/.bashrc \
&& sed -i 's/alias ls='\''ls --color=auto'\''/alias ls='\''ls -asiF --color=auto'\''/g' /home/$USERNAME/.bashrc
RUN echo 'alias xterm='"'"'xterm -fa '"'"'Monospace'"'"' -fs 10'"'"'\n' >> /home/$USERNAME/.bashrc
RUN echo 'export XAUTHORITY=$HOME/.docker.xauth' >> /home/$USERNAME/.bashrc

# root
# before
#    xterm-color) color_prompt=yes;;
# after
#    xterm-color|*-256color) color_prompt=yes;;

# before
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# after
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;37m\]\u@\[\033[01;31m\]autoware\[\033[00m\]:\[\033[01;35m\]\w\[\033[00m\]\$ '

# before
# alias ls='ls --color=auto'
# after
# alias ls='ls -asiF --color=auto'

RUN sed -i 's/xterm-color) color_prompt=yes;;/xterm-color|\*-256color) color_prompt=yes;;/g' /root/.bashrc \
&& sed -i 's/#force_color_prompt=yes/force_color_prompt=yes/g' /root/.bashrc \
&& sed -i 's/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;32m\\\]\\u@\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;34m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;37m\\\]\\u@\\\[\\033\[01;31m\\\]autoware\\\[\\033\[00m\\\]:\\\[\\033\[01;35m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/g' /root/.bashrc \
&& sed -i 's/alias ls='\''ls --color=auto'\''/alias ls='\''ls -asiF --color=auto'\''/g' /root/.bashrc
RUN echo 'alias xterm='"'"'xterm -fa '"'"'Monospace'"'"' -fs 10'"'"'\n' >> /root/.bashrc
RUN echo 'export XAUTHORITY=$HOME/.docker.xauth' >> /root/.bashrc


#########################################
# .dircolors
########################################
RUN echo '# dircolors -p > ~/.dircolors\n\
# vi ~/.dircolors\n\
# man dircolors\n\
\n\
# Configuration file for dircolors, a utility to help you set the\n\
# LS_COLORS environment variable used by GNU ls with the --color option.\n\
# Copyright (C) 1996-2016 Free Software Foundation, Inc.\n\
# Copying and distribution of this file, with or without modification,\n\
# are permitted provided the copyright notice and this notice are preserved.\n\
# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the\n\
# slackware version of dircolors) are recognized but ignored.\n\
# Below are TERM entries, which can be a glob patterns, to match\n\
# against the TERM environment variable to determine if it is colorizable.\n\
TERM Eterm\n\
TERM ansi\n\
TERM color-xterm\n\
TERM con[0-9]*x[0-9]*\n\
TERM cons25\n\
TERM console\n\
TERM cygwin\n\
TERM dtterm\n\
TERM eterm-color\n\
TERM gnome\n\
TERM gnome-256color\n\
TERM hurd\n\
TERM jfbterm\n\
TERM konsole\n\
TERM kterm\n\
TERM linux\n\
TERM linux-c\n\
TERM mach-color\n\
TERM mach-gnu-color\n\
TERM mlterm\n\
TERM putty\n\
TERM putty-256color\n\
TERM rxvt*\n\
TERM screen*\n\
TERM st\n\
TERM st-256color\n\
TERM terminator\n\
TERM tmux*\n\
TERM vt100\n\
TERM xterm*\n\
# Below are the color init strings for the basic file types. A color init\n\
# string consists of one or more of the following numeric codes:\n\
# Attribute codes:\n\
# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed\n\
# Text color codes:\n\
# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\n\
# Background color codes:\n\
# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\n\
#NORMAL 00 # no color code at all\n\
#FILE 00 # regular file: use no color at all\n\
RESET 0 # reset to "normal" color\n\
DIR 01;35 # directory\n\
LINK 01;36 # symbolic link. (If you set this to '"'"'target'"'"' instead of a\n\
 # numerical value, the color is as for the file pointed to.)\n\
MULTIHARDLINK 00 # regular file with more than one link\n\
FIFO 40;99 # pipe\n\
SOCK 01;32 # socket\n\
DOOR 01;32 # door\n\
BLK 40;99;01 # block device driver\n\
CHR 40;99;01 # character device driver\n\
ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'"'"'able file ...\n\
MISSING 00 # ... and the files they point to\n\
SETUID 37;41 # file that is setuid (u+s)\n\
SETGID 30;43 # file that is setgid (g+s)\n\
CAPABILITY 30;41 # file with capability\n\
STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)\n\
OTHER_WRITABLE 35;42 # dir that is other-writable (o+w) and not sticky\n\
STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable\n\
# This is for files with execute permission:\n\
EXEC 01;31\n\
# List any file extensions like '"'"'.gz'"'"' or '"'"'.tar'"'"' that you would like ls\n\
# to colorize below. Put the extension, a space, and the color init string.\n\
# (and any comments you want to add after a '"'"'#'"'"')\n\
# If you use DOS-style suffixes, you may want to uncomment the following:\n\
#.cmd 01;31 # executables (bright green)\n\
#.exe 01;31\n\
#.com 01;31\n\
#.btm 01;31\n\
#.bat 01;31\n\
# Or if you want to colorize scripts even if they do not have the\n\
# executable bit actually set.\n\
#.sh 01;31\n\
#.csh 01;31\n\
 # archives or compressed (bright red)\n\
.tar 01;33\n\
.tgz 01;33\n\
.arc 01;33\n\
.arj 01;33\n\
.taz 01;33\n\
.lha 01;33\n\
.lz4 01;33\n\
.lzh 01;33\n\
.lzma 01;33\n\
.tlz 01;33\n\
.txz 01;33\n\
.tzo 01;33\n\
.t7z 01;33\n\
.zip 01;33\n\
.z 01;33\n\
.Z 01;33\n\
.dz 01;33\n\
.gz 01;33\n\
.lrz 01;33\n\
.lz 01;33\n\
.lzo 01;33\n\
.xz 01;33\n\
.bz2 01;33\n\
.bz 01;33\n\
.tbz 01;33\n\
.tbz2 01;33\n\
.tz 01;33\n\
.deb 01;33\n\
.rpm 01;33\n\
.jar 01;33\n\
.war 01;33\n\
.ear 01;33\n\
.sar 01;33\n\
.rar 01;33\n\
.alz 01;33\n\
.ace 01;33\n\
.zoo 01;33\n\
.cpio 01;33\n\
.7z 01;33\n\
.rz 01;33\n\
.cab 01;33\n\
# image formats\n\
.jpg 01;32\n\
.jpeg 01;32\n\
.gif 01;32\n\
.bmp 01;32\n\
.pbm 01;32\n\
.pgm 01;32\n\
.ppm 01;32\n\
.tga 01;32\n\
.xbm 01;32\n\
.xpm 01;32\n\
.tif 01;32\n\
.tiff 01;32\n\
.png 01;32\n\
.svg 01;32\n\
.svgz 01;32\n\
.mng 01;32\n\
.pcx 01;32\n\
.mov 01;32\n\
.mpg 01;32\n\
.mpeg 01;32\n\
.m2v 01;32\n\
.mkv 01;32\n\
.webm 01;32\n\
.ogm 01;32\n\
.mp4 01;32\n\
.m4v 01;32\n\
.mp4v 01;32\n\
.vob 01;32\n\
.qt 01;32\n\
.nuv 01;32\n\
.wmv 01;32\n\
.asf 01;32\n\
.rm 01;32\n\
.rmvb 01;32\n\
.flc 01;32\n\
.avi 01;32\n\
.fli 01;32\n\
.flv 01;32\n\
.gl 01;32\n\
.dl 01;32\n\
.xcf 01;32\n\
.xwd 01;32\n\
.yuv 01;32\n\
.cgm 01;32\n\
.emf 01;32\n\
# http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions\n\
.axv 01;32\n\
.anx 01;32\n\
.ogv 01;32\n\
.ogx 01;32\n\
# audio formats\n\
.aac 00;36\n\
.au 00;36\n\
.flac 00;36\n\
.m4a 00;36\n\
.mid 00;36\n\
.midi 00;36\n\
.mka 00;36\n\
.mp3 00;36\n\
.mpc 00;36\n\
.ogg 00;36\n\
.ra 00;36\n\
.wav 00;36\n\
# http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions\n\
.axa 00;36\n\
.oga 00;36\n\
.opus 00;36\n\
.spx 00;36\n\
.xspf 00;36\n'\
> /root/.dircolors && cp /root/.dircolors /home/$USERNAME/.dircolors && chown $USERNAME:$USERNAME /home/$USERNAME/.dircolors


########################################
# Command Tools Install
########################################
RUN apt-get install -y vim less htop unzip locate git curl wget


########################################
# Python 2.7 Install
########################################
RUN apt-get install -y python2.7 python2.7-dev \
&& update-alternatives --install /usr/bin/python python /usr/bin/python2.7 0


########################################
# Pip Install
########################################
RUN apt-get install -y curl \
&& curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
&& python get-pip.py \
&& rm -rf get-pip.py


########################################
# Build Package Install
########################################
RUN apt-get update \
&& apt-get install -y build-essential checkinstall cmake curl ffmpeg gfortran git libatlas-base-dev libavcodec-dev libavformat-dev checkinstall cmake curl ffmpeg gfortran git libatlas-base-dev libavcodec-dev libavformat-dev libavresample-dev libblas-dev libdc1394-22 libdc1394-22-dev libeigen3-dev libfaac-dev libffi-dev libfreetype6-dev libgdal-dev libgirepository1.0-dev libglib2.0-dev libgnutls28-dev libgphoto2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgtk-3-dev libjasper-dev libjpeg-dev liblapack-dev liblapacke-dev libmp3lame-dev libopenblas-dev libopencore-amrnb-dev libopencore-amrwb-dev libpng12-dev libprotobuf-dev libssl-dev libswscale-dev libtbb-dev libtheora-dev libtiff5-dev libv4l-dev libvorbis-dev libxine2-dev libxml2-dev libxslt1-dev libxvidcore-dev locate pkg-config qtbase5-dev unzip v4l-utils wget zip python-wstool
RUN updatedb


########################################
# Pip Wheel Install
########################################
#TF 1.8 need mock to build
#ImportError: No module named mock
RUN pip install --upgrade pip \
&& pip install --upgrade setuptools \
&& pip install --upgrade numpy \
&& pip install --upgrade matplotlib \
&& pip install --upgrade futures \
&& pip install --upgrade Pillow \
&& pip install --upgrade cython \
&& pip install --upgrade scikit-image \
&& pip install --upgrade pyyaml \
&& pip install --upgrade mock
#RUN pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U


########################################
# CUDNN Install
########################################
RUN apt-get install -y libcudnn7-dev


########################################
# OpenCV Install
########################################
#ln -s /usr/include/libv4l1-videodev.h /usr/include/linux/videodev.h
#ln -s /usr/include/libv4l1-videodev.h /usr/include/x86_64-linux-gnu/sys/videodev.h
RUN apt-get install -y build-essential cmake libeigen3-dev libatlas-base-dev gfortran git wget libavformat-dev libavcodec-dev libswscale-dev libavresample-dev ffmpeg pkg-config unzip qtbase5-dev libopencv-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libv4l-dev libtbb-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev v4l-utils liblapacke-dev libopenblas-dev checkinstall libgdal-dev 

# OpenCV 3.3.1 issues
#/compile/opencv-3.3.1/build/3rdparty/ippicv/ippiw_lnx/src/iw_own.c
#error: 'PTHREAD_MUTEX_RECURSIVE' undeclared (first use in this function)
#error: 'PATH_MAX' undeclared here (not in a function)
# fix issues:
#sed -i 's/PTHREAD_MUTEX_RECURSIVE/PTHREAD_MUTEX_RECURSIVE_NP/g' /compile/opencv-3.3.1/build/3rdparty/ippicv/ippiw_lnx/src/iw_own.c
#sed -i 's/#include <limits.h>/#include <linux\/limits.h>/g' /compile/opencv-3.3.1/3rdparty/ittnotify/src/ittnotify/ittnotify_static.c 
ENV CV_VERSION=3.3.1
ENV CUDA_COMPUTE_CAPABILITY=6.1
ENV SOURCE_PATH=/compile
ENV PACKAGE_PATH=/package
RUN mkdir -p $SOURCE_PATH \
&& cd $SOURCE_PATH \
&& wget https://github.com/opencv/opencv/archive/$CV_VERSION.zip -O opencv-$CV_VERSION.zip \
&& unzip opencv-$CV_VERSION.zip \
&& wget https://github.com/opencv/opencv_contrib/archive/$CV_VERSION.zip -O opencv_contrib-$CV_VERSION.zip \
&& unzip opencv_contrib-$CV_VERSION.zip \
&& mkdir -p opencv-$CV_VERSION/build \
&& cd opencv-$CV_VERSION/build \
&& cmake -DCMAKE_C_FLAGS="-march=native" -D CMAKE_CXX_FLAGS="-march=native" -D ENABLE_CXX11=ON -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=$PACKAGE_PATH/opencv-$CV_VERSION/usr/local -D WITH_TBB=ON -D WITH_LIBV4L=ON -D WITH_V4L=OFF -D WITH_QT=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -D WITH_CUDA=ON -D CUDA_ARCH_BIN="$CUDA_COMPUTE_CAPABILITY" -D CUDA_ARCH_PTX="$CUDA_COMPUTE_CAPABILITY" -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES" -D CUDA_CUDA_LIBRARY=/usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs/libcuda.so -D WITH_GDAL=ON -D WITH_XINE=ON -D BUILD_EXAMPLES=OFF -D PYTHON2_EXECUTABLE=/usr/bin/python2 -D PYTHON_INCLUDE_DIR=/usr/include/python2.7 -D PYTHON_INCLUDE_DIR2=/usr/include/python2.7 -D PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython2.7.so -D PYTHON2_NUMPY_INCLUDE_DIRS=/usr/local/lib/python2.7/dist-packages/numpy/core/include/ -D OPENCV_EXTRA_MODULES_PATH=$SOURCE_PATH/opencv_contrib-$CV_VERSION/modules .. \
&& sed -i 's/PTHREAD_MUTEX_RECURSIVE/PTHREAD_MUTEX_RECURSIVE_NP/g' $SOURCE_PATH/opencv-$CV_VERSION/build/3rdparty/ippicv/ippiw_lnx/src/iw_own.c \
&& sed -i 's/#include <limits.h>/#include <linux\/limits.h>/g' $SOURCE_PATH/opencv-$CV_VERSION/3rdparty/ittnotify/src/ittnotify/ittnotify_static.c \
&& make install -j $(($(nproc) + 1)) \
&& echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf \
&& mkdir -p $PACKAGE_PATH/opencv-$CV_VERSION/etc/ld.so.conf.d \
&& echo "$PACKAGE_PATH/opencv-$CV_VERSION/usr/local/lib" > $PACKAGE_PATH/opencv-$CV_VERSION/etc/ld.so.conf.d/opencv.conf \
&& mkdir -p $PACKAGE_PATH/opencv-$CV_VERSION/DEBIAN \
&& cd $PACKAGE_PATH \
&& echo "Source: opencv-$CV_VERSION\n\
Package: opencv\n\
Version: $CV_VERSION\n\
Priority: optional\n\
Maintainer: Yoshiroh Takanashi <takanashi@gclue.jp>\n\
Architecture: amd64\n\
Depends: \n\
Description: OpenCV version $CV_VERSION\n"\
> $PACKAGE_PATH/opencv-$CV_VERSION/DEBIAN/control \
&& DEBIAN_FRONTEND=noninteractive apt-get install -y fakeroot \
&& fakeroot dpkg-deb --build opencv-$CV_VERSION \
&& cd $PACKAGE_PATH \
&& dpkg -i opencv-$CV_VERSION.deb \
&& ldconfig \
&& rm -rf $SOURCE_PATH/$CV_VERSION.zip \
&& rm -rf $SOURCE_PATH/opencv-$CV_VERSION \
&& rm -rf $SOURCE_PATH/opencv_contrib-$CV_VERSION.zip \
&& rm -rf $SOURCE_PATH/opencv_contrib-$CV_VERSION \
&& rm -rf $PACKAGE_PATH/opencv-$CV_VERSION \
&& ldconfig


########################################
# ROS
########################################
# 1.9.1
RUN apt-get install -y software-properties-common wget curl git cmake cmake-curses-gui libboost-all-dev libflann-dev libgsl0-dev libgoogle-perftools-dev libeigen3-dev

# Intall some basic GUI and sound libs
RUN apt-get install -y  xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme fonts-dejavu fonts-liberation hicolor-icon-theme libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module libasound2 libgtk-3-0 libdbus-glib-1-2 libxt6 libexif12 libgl1-mesa-glx libgl1-mesa-dri language-pack-en \
&& update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX

# Intall some basic GUI tools
RUN apt-get install -y cmake-qt-gui gnome-terminal

# Intall ROS
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' \
&& apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \
&& apt-get update \
&& apt-get install -y ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests ros-kinetic-uvc-camera ros-kinetic-velodyne ros-kinetic-gmapping ros-kinetic-openslam-gmapping ros-kinetic-map-server pcl-tools


# Setup .bashrc for ROS
RUN echo "source /opt/ros/kinetic/setup.bash" >> /home/$USERNAME/.bashrc \
&& echo "source /opt/ros/kinetic/setup.bash" >> /root/.bashrc \
&& echo "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc \
&& echo "export QT_X11_NO_MITSHM=1" >> /root/.bashrc \
&& echo "cd" >> /home/$USERNAME/.bashrc

USER $USERNAME

RUN sudo rosdep init \
        && rosdep update

# YOLO_V2
#RUN cd $HOME \
#&& git clone https://github.com/pjreddie/darknet.git \
#&& cd $HOME/darknet \
#&& git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134 \
#&& cd $HOME/darknet/data \
#&& wget https://pjreddie.com/media/files/yolo.weights


########################################
# Velodyne VLP-16
########################################
# Installing the VLP16 driver
#RUN mkdir -p $HOME/catkin_ws/src \
#&& cd $HOME/catkin_ws/src/ \
#&& git clone https://github.com/ros-drivers/velodyne.git \
#&& cd $HOME/catkin_ws/ \
#&& rosdep install --from-paths src --ignore-src --rosdistro kinetic -y \
#&& catkin_make


########################################
# Install Autoware
########################################
# -lpthread to -pthread
# https://stackoverflow.com/questions/1662909/undefined-reference-to-pthread-create-in-linux
# https://github.com/LunarG/VulkanSamples/issues/149
# https://github.com/DecodeGenetics/graphtyper/issues/9

#CMake Error: The following variables are used in this project, but they are set to NOTFOUND.
#Please set them or make sure they are set and tested correctly in the CMake files:
#CUDA_CUDA_LIBRARY (ADVANCED)
#    linked by target "libdpm_ttic" in directory /home/ubuntu/Autoware/ros/src/computing/perception/detection/vision_detector/libs/dpm_ttic

# grep -rl . -e '-lpthread' | xargs -n1 file | grep "ASCII text" | cut -d':' -f1 | xargs sed -i 's/-lpthread/-pthread/g'
# ros/src/computing/perception/detection/vision_detector/libs/dpm_ttic/CMakeLists.txt
#&& grep -rl . -e '-lpthread' | xargs sed -i 's/-lpthread/-pthread/g' \

RUN cd $HOME \
&& git clone https://github.com/CPFL/Autoware /home/$USERNAME/Autoware \
&& cd $HOME/Autoware \
&& git checkout tags/1.9.1 \
&& cd $HOME/Autoware/ros/src \
&& git submodule update --init --recursive \
&& sed -i 's/cameraparameters\.background=Eigen::Vector4d(0,0,0,1);/cameraparameters.background=Eigen::Vector4d(0.5,0.5,0.5,1);/g' $HOME/Autoware/ros/src/util/packages/RobotSDK/glviewer/GLViewer/glviewer.cpp \
&& bash -c 'source /opt/ros/kinetic/setup.bash; catkin_init_workspace; cd ../; ./catkin_make_release' \
&& mkdir -p $HOME/.local/share

RUN echo "source /home/$USERNAME/Autoware/ros/devel/setup.bash" >> /home/$USERNAME/.bashrc \
&& sudo sh -c 'echo "source /home/ubuntu/Autoware/ros/devel/setup.bash" >> /root/.bashrc'

# Setting
ENV LANG="en_US.UTF-8"
RUN echo "export LANG=\"en_US.UTF-8\"" >> /home/$USERNAME/.bashrc
RUN mkdir -p /home/$USERNAME/.local/share

# Change Terminal Color
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type string "#000000"


########################################
# Default Command
########################################
CMD bash -c "/usr/bin/xterm -fa 'Monospace' -fs 10"


########################################
# Docker run xterm 
########################################
#docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix:rw -v /home/$(getent passwd 1000 | cut -d: -f1)/.docker.xauth:/home/ubuntu/.docker.xauth:rw -v /root/.docker.xauth:/root/.docker.xauth:rw -e "DISPLAY" --user ubuntu autoware
